plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.personal'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "18"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Jackson dependencies
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.15.0'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.0'

	// Redis dependencies
	implementation 'org.springframework.data:spring-data-redis:3.1.2'
	implementation 'redis.clients:jedis:4.4.1'

	//Neo4j dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j:3.1.1'

	//spring-boot-starter-actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator:3.1.2'
	// Aspect oriented programming with Spring AOP and aspect j
	implementation 'org.springframework.boot:spring-boot-starter-aop:3.1.2'

	// micrometer dependency
	implementation 'io.micrometer:micrometer-core:1.11.2'

	// influx db
	// implementation 'io.micrometer:micrometer-registry-influx:1.11.2'

	// prometheus
	implementation 'io.micrometer:micrometer-registry-prometheus:1.11.2'

	//kafka
	implementation 'org.springframework.kafka:spring-kafka:3.0.9'
	implementation 'org.springframework.boot:spring-boot-starter-webflux:3.0.9'
	implementation 'io.projectreactor.kafka:reactor-kafka:1.3.19'

	//Reactive java
	implementation 'io.projectreactor:reactor-core:3.5.8'

	// Guava
	implementation 'com.google.guava:guava:32.1.1-jre'

	// Junit 5
	implementation 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
/*
// Configuring JAVA Plugin to use annotation processor
tasks.withType(JavaCompile) {
	options.compilerArgs += [
			'-proc:only',
			'-processor', 'com.personal.OnePiece.annotation.RGetterAnnotationProcessor'
	]
}
targetCompatibility = JavaVersion.VERSION_18
 */